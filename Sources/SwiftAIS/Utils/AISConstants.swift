//
//  AISConstants.swift
//  SwiftAIS
//
//  Created by Connor Gibbons  on 6/9/25.
//

let binaryToASCIITable: [UInt8: Character] = {
    var table: [UInt8: Character] = [:]
    for asciiValue in 0..<64 {
        let val = UInt8(asciiValue)
        table[val] = val < 40 ? Character(UnicodeScalar(val + 48)) : Character(UnicodeScalar(val + 56))
    }
    return table
}()


// For use in the coarse preamble detection function. Unfortunate compromise because I'll need a lot of time to replicate filtfilt properly.
// Will **only** work at sample rate of 48K
let idealPreambleAndStartImpulse: [Float] = [-2400.0, -2397.10350029, -2387.61746596, -2356.86505028, -2273.09591795, -2082.86938396, -1722.86520637, -1155.07259259, -408.772575, 408.65755254, 1154.46495183, 1719.86727265, 2070.47314267, 2229.95941974, 2229.95941974, 2070.47314755, 1719.86738171, 1154.46639127, 408.67125004, -408.67125004, -1154.46639127, -1719.86738171, -2070.47314755, -2229.95941974, -2229.95941974, -2070.47314755, -1719.86738171, -1154.46639127, -408.67125004, 408.67125004, 1154.46639127, 1719.86738171, 2070.47314755, 2229.95941974, 2229.95941974, 2070.47314755, 1719.86738171, 1154.46639127, 408.67125004, -408.67125004, -1154.46639127, -1719.86738171, -2070.47314755, -2229.95941974, -2229.95941974, -2070.47314755, -1719.86738171, -1154.46639127, -408.67125004, 408.67125004, 1154.46639127, 1719.86738171, 2070.47314755, 2229.95941974, 2229.95941974, 2070.47314755, 1719.86738171, 1154.46639127, 408.67125004, -408.67125004, -1154.46639127, -1719.86738171, -2070.47314755, -2229.95941974, -2229.95941974, -2070.47314755, -1719.86738171, -1154.46639127, -408.67125004, 408.67125004, 1154.46639127, 1719.86738171, 2070.47314755, 2229.95941974, 2229.95941974, 2070.47314755, 1719.86738171, 1154.46639127, 408.67125004, -408.67125004, -1154.46639127, -1719.86738171, -2070.47314755, -2229.95941974, -2229.95941974, -2070.47314755, -1719.86738171, -1154.46639127, -408.67125004, 408.67125004, 1154.46639127, 1719.86738171, 2070.47314755, 2229.95941974, 2229.95941974, 2070.47314755, 1719.86738171, 1154.46639127, 408.67125004, -408.67125004, -1154.46639127, -1719.86738171, -2070.47314755, -2229.95941974, -2229.95941974, -2070.47314755, -1719.86738171, -1154.46639127, -408.67125004, 408.67125004, 1154.46639127, 1719.86738171, 2070.47314755, 2229.95941974, 2229.95941974, 2070.47314267, 1719.86727265, 1154.46495183, 408.65755254, -408.772575, -1155.07259259, -1722.86520637, -2082.86937909, -2273.0958089, -2356.86361084, -2387.60376846, -2397.00217534, -2399.39379868, -2399.89867505, -2399.9863025, -2399.99856056, -2399.99989095, -2399.99999513, -2400.0, -2400.0, -2400.0, -2400.0, -2400.0, -2400.0, -2400.0, -2399.99999513, -2399.99989095, -2399.99856056, -2399.9863025, -2399.89867505, -2399.39379868, -2397.00217534, -2387.60376846, -2356.86361084, -2273.09580402, -2082.86926516, -1722.86365788, -1155.05745565, -408.65755254, 409.36507882, 1158.06897781, 1735.26132886, 2126.00576337, 2400.0]


let AIS_CENTER_FREQUENCY = 162000000
let AIS_CHANNEL_A = 161975000
let AIS_CHANNEL_B = 162025000
let CHANNEL_A_OFFSET = AIS_CHANNEL_A - AIS_CENTER_FREQUENCY
let CHANNEL_B_OFFSET = AIS_CHANNEL_B - AIS_CENTER_FREQUENCY
let DEFAULT_SAMPLE_RATE = 240000
